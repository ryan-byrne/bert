name: Build and Deploy to Cloud Run

# 1. Build React Frontend
# 2. Move Build Folder into Server
# 3. Dockerize Server

on:
  push:
    branches:
      - "testing"
      - "production"

env:
  PROJECT_ID: bert-aug2022-359622
  GAR_LOCATION: us-central1
  BRANCH: ${GITHUB_REF##*/}
  SERVICE: bert
  REGION: us-central1

jobs:
  deploy:

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: "Setup Environment"
        run: |-
          touch ${{ env.BRANCH }}.env.yaml
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}" >> ${{ env.BRANCH }}.env.yaml
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}" >> ${{ env.BRANCH }}.env.yaml
          echo "MONGO_URL: ${{ secrets.MONGO_URL }}" >> ${{ env.BRANCH }}.env.yaml
          echo "SESSION_SECRET: ${{ secrets.SESSION_SECRET }}" >> ${{ env.BRANCH }}.env.yaml
          if [[ ${{ env.BRANCH }} == 'testing' ]]; then
            echo "MONGO_USER: ${{ secrets.TESTING_MONGO_USER }}" >> ${{ env.BRANCH }}.env.yaml
            echo "MONGO_PASS: ${{ secrets.TESTING_MONGO_PASS }}" >> ${{ env.BRANCH }}.env.yaml
            echo "MONGO_DB: ${{ secrets.TESTING_MONGO_DB }}" >> ${{ env.BRANCH }}.env.yaml
            echo "CLIENT_URL: https://testing-zcgw6ooqia-uc.a.run.app" >> ${{ env.BRANCH }}.env.yaml
            echo "SERVER_URL: https://testing-zcgw6ooqia-uc.a.run.app" >> ${{ env.BRANCH }}.env.yaml
          else
            echo "CLIENT_URL: http://bert.thebetalab.org" >> ${{ env.BRANCH }}.env.yaml
            echo "MONGO_USER: ${{ secrets.PRODUCTION_MONGO_USER }}" >> ${{ env.BRANCH }}.env.yaml
            echo "MONGO_PASS: ${{ secrets.PRODUCTION_MONGO_PASS }}" >> ${{ env.BRANCH }}.env.yaml
            echo "MONGO_DB: ${{ secrets.PRODUCTION_MONGO_DB }}" >> ${{ env.BRANCH }}.env.yaml
            echo "SERVER_URL: https://bert.thebetalab.org" >> ${{ env.BRANCH }}.env.yaml
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      
      - name: Build and Test Frontend
        run: |-
          cd client
          npm ci
          npm run build
          npm test

      - name: 'Include Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - id: auth
        name: Google Authentication
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: 'Docker Auth'
        run:
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: 'Build & Push Container'
        run: |-
          cd ..
          docker build --build-arg NODE_ENV=${{ env.BRANCH }} -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.BRANCH }}:latest" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.BRANCH }}:latest"
          
      - name: 'Deploy to Cloud Run'
        run: >
          gcloud run deploy ${{ env.BRANCH }}
          --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.BRANCH }}:latest
          --quiet
          --platform managed
          --region ${{ env.REGION }}
          --project ${{ env.PROJECT_ID }}
          --format json
          --service-account ${{ secrets.WIF_SERVICE_ACCOUNT }}
          --env-vars-file ${{ env.BRANCH }}.env.yaml
          --allow-unauthenticated
